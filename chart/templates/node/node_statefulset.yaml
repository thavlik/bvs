apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-node
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  serviceName: {{ .Release.Name }}-node
  selector:
    matchLabels:
      app: {{ .Release.Name }}-node
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-node
    spec:
      volumes:
      - name: shared-postgres
        emptyDir: {}
      - name: shared-node
        emptyDir: {}
    {{- if .Values.postgres.pvc }}
      - name: postgresdata
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.pvc }}
    {{- end }}
    {{- if .Values.node.pvc }}
      - name: nodedata
        persistentVolumeClaim:
          claimName: {{ .Values.node.pvc }}
    {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 10 }}
    {{- end }}
      serviceAccountName: {{ .Release.Name }}-node
      containers:
      - name: dbsync
        imagePullPolicy: {{ .Values.dbSync.imagePullPolicy }}
        image: {{ .Values.dbSync.image }}
        command:
        - sh
        - -c
        - db-sync || cat $(find /tmp -iname '*.log')
        volumeMounts:
        - name: shared-postgres
          mountPath: /var/run/postgresql
        - name: shared-node
          mountPath: /shared
        env:
        - name: POSTGRES_HOST
          value: {{ .Release.Name }}-node
        - name: POSTGRES_PORT
          value: "5432"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
{{ toYaml .Values.dbSync.resources | indent 12 }}
      - name: postgres
        imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
        image: {{ .Values.postgres.image }}
        command:
        - docker-entrypoint.sh
        - postgres
        resources:
{{ toYaml .Values.postgres.resources | indent 12 }}
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_PASSWORD
          value: foo
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: shared-postgres
          mountPath: /var/run/postgresql
    {{- if .Values.postgres.pvc }}
        - name: postgresdata
          mountPath: /var/lib/postgresql/data
    {{- end }}
      - name: node
        imagePullPolicy: {{ .Values.node.imagePullPolicy }}
        image: {{ .Values.node.image }}
        volumeMounts:
        - name: shared-node
          mountPath: /shared
    {{- if .Values.node.pvc }}
        - name: nodedata
          mountPath: /mnt
    {{- end }}
        readinessProbe:
          exec:
            command:
              - cat
              - /ready
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 25
        command:
        - node
        - server
        - --node-config
        - "/configs/testnet-config.json"
        - --node-database-path
        - "/mnt/db"
        - --node-socket-path
        - "/shared/node.socket"
        - --node-host-addr
        - "0.0.0.0"
        - --node-port
        - "1337"
        - --node-topology
        - "/configs/testnet-topology.json"
      {{- if .Values.node.metrics }}
        - --metrics-port
        - "9091"
      {{- end }}
        resources:
{{ toYaml .Values.node.resources | indent 12 }}
        ports:
        - containerPort: 80
          name: http
        - containerPort: 1337
          name: node
        - containerPort: 2100
          name: proxy
      {{- if .Values.node.metrics }}
        - containerPort: 9091
          name: metrics
      {{- end }}
